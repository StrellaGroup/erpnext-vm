---
  - name: Apply basic roles
    hosts: all
    become: yes
    become_user: root
    gather_facts: False
    pre_tasks:
      - raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal mariadb-server mariadb-common)
      - raw: apt -y update && apt install -y mariadb-server mariadb-common
      - setup: # aka gather_facts
    vars:
        - mysql_secure_installation: true
        - mysql_root_password: frappe
        - mysql_conf_tpl: templates/mariadb_config.cnf
        - nginx_conf_file: templates/nginx.conf
        - pip_install_url: https://bootstrap.pypa.io/get-pip.py
    tasks:
        - name: Install the 'Development tools' package group (Redhat)
          yum: name="@Development tools" state=present
          when: ansible_os_family == 'RedHat'
        - name: Clean off old directories
          file: path="{{ item }}" state=absent
          with_items:
             - /home/strella/bench-repo
             - /home/strella/frappe-bench
        - name: Checkout bench-repo
          git: repo=https://github.com/frappe/bench dest=/home/strella/bench-repo update=no
          # with_items:
          #  - /home/strella/bench-repo
          #  - /home/strella/frappe-bench
        - name: Install packages
          yum: name={{ item }} state=present
          with_items:
            - git
            - nginx
            - zlib-devel
            - bzip2-devel
            - openssl-devel
            - postfix
            - python-devel
            - mariadb
            - redis
            - libXrender
            - libXext
            - cronie
            - sudo
            - which
            - xorg-x11-fonts-75dpi
            - xorg-x11-fonts-Type1
            - screen
            - vim
            - git
            - nginx
            - zlib-devel
            - bzip2-devel
            - openssl-devel
            - postfix
            - python-devel
            - redis
            - cronie
            - sudo
            - which
            - supervisor
            - nodejs
            - npm
            - libtiff-devel
            - libjpeg-devel
            - libzip-devel
            - freetype-devel
            - lcms2-devel
            - libwebp-devel
            - tcl-devel
            - tk-devel
          when: ansible_os_family == 'RedHat'
        - name: Install packages
          apt: pkg={{ item }} state=present
          with_items:
            - python-dev
            - python-setuptools
            - build-essential
            - python-mysqldb
            - git
            - ntp
            - vim
            - screen
            - htop
            - mariadb-server
            - mariadb-common
            - libmariadbd-dev
            - libmariadb-client-lgpl-dev
            - libmysqlclient-dev
            - libxslt1.1
            - libxslt1-dev
            - redis-server
            - libssl-dev
            - libcrypto++-dev
            - postfix
            - nginx
            - supervisor
            # - python-pip
            - fontconfig
            - libxrender1
            - libxext6
            - xfonts-75dpi
            - xfonts-base
            - nodejs
            - npm
            - libtiff5-dev
            - libjpeg8-dev
            - zlib1g-dev
            - libfreetype6-dev
            - liblcms2-dev
            - libwebp-dev
            - tcl8.6-dev
            - tk8.6-dev
            - python-tk
            - nodejs-legacy
          when: ansible_os_family == 'Debian'
        - name: Create cache dir for pip downloads
          file:
            path: /var/cache/pip-installer
            mode: 0755
            state: directory
          when: ansible_os_family == 'Debian'

        - name: Pip | Download the Pip installer to /var/cache/pip-installer
          get_url:
            url: "{{pip_install_url}}"
            dest: "/var/cache/pip-installer/get-pip.py"
          when: ansible_os_family == 'Debian'

        - name: Pip | Run get-pip.py to intall Pip
          command: python /var/cache/pip-installer/get-pip.py
          register: pip_command
          changed_when: "'Requirement already up-to-date: pip' not in pip_command.stdout"
          when: ansible_os_family == 'Debian'

        - name: Link pip
          file:
            path: /usr/bin/pip
            state: absent
          when: ansible_os_family == 'Debian'

        - name: Link pip
          file:
            path: src=/usr/local/bin/pip dest=/usr/bin/pip state=link
          when: ansible_os_family == 'Debian'

        - user: name="strella"
    roles:
        - mariadb
        - nginx
        - wkhtmltopdf
